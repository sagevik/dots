#!/bin/sh

# This is the example configuration file for river.
#
# If you wish to edit this, you will probably want to copy it to
# $XDG_CONFIG_HOME/river/init or $HOME/.config/river/init first.
#
# See the river(1), riverctl(1), and rivercarro(1) man pages for complete
# documentation.

# Note: the "Super" modifier is also known as Logo, GUI, Windows, Mod4, etc.

riverctl spawn "swaybg -i ~/pix/wallpapers/$(ls ~/pix/wallpapers | shuf -n 1)"
# riverctl spawn "swaybg -i ~/pix/wallpapers/moss.png"

riverctl spawn waybar
riverctl spawn dunst

# Set background and border color
riverctl border-width 2
riverctl background-color 0x1D1C19
riverctl border-color-focused 0x8ba4b0
riverctl border-color-unfocused 0x1D1C19

# Set keyboard repeat rate
riverctl set-repeat 30 300
# riverctl keyboard-layout -options "ctrl:nocaps" no # Map capslock to ctrl
riverctl keyboard-layout -options "caps:escape" no # Map capslock to escape

# Touchpad Settings
# Get device name from riverctl list-inputs
riverctl input "pointer-2-1-PS/2_Generic_Mouse" tap enabled
riverctl input "pointer-2-1-PS/2_Generic_Mouse" accel-profile flat
riverctl input "pointer-2-1-PS/2_Generic_Mouse" natural-scroll enabled
riverctl input "pointer-2-1-PS/2_Generic_Mouse" disable-while-typing enabled
riverctl input "pointer-2-1-PS/2_Generic_Mouse" disable-while-trackpointing enabled

riverctl input "pointer-1267-12572-DLL0945:00_04F3:311C_Touchpad" tap enabled
riverctl input "pointer-1267-12572-DLL0945:00_04F3:311C_Touchpad" accel-profile flat
riverctl input "pointer-1267-12572-DLL0945:00_04F3:311C_Touchpad" natural-scroll enabled
riverctl input "pointer-1267-12572-DLL0945:00_04F3:311C_Touchpad" disable-while-typing enabled
riverctl input "pointer-1267-12572-DLL0945:00_04F3:311C_Touchpad" disable-while-trackpointing enabled

# Disable touchpad
riverctl input "pointer-2-1-PS/2_Generic_Mouse" events disabled
#

# Super+Shift+Return to start an instance of foot (https://codeberg.org/dnkl/foot)
riverctl map normal Super Return spawn kitty

riverctl map normal Super Space spawn "rofi -show run"

# Super+Q to close the focused view
riverctl map normal Super Q close

# Super+Shift+E to exit river
riverctl map normal Super+Control+Shift Q exit

# Super+J and Super+K to focus the next/previous view in the layout stack
riverctl map normal Super J focus-view next
riverctl map normal Super K focus-view previous

# Super+Shift+J and Super+Shift+K to swap the focused view with the next/previous
# view in the layout stack
riverctl map normal Super+Shift J swap next
riverctl map normal Super+Shift K swap previous

# Super+Period and Super+Comma to focus the next/previous output
riverctl map normal Super Period focus-output next
riverctl map normal Super Comma focus-output previous

# Super+Shift+{Period,Comma} to send the focused view to the next/previous output
riverctl map normal Super+Shift Period send-to-output next
riverctl map normal Super+Shift Comma send-to-output previous

# Super+Return to bump the focused view to the top of the layout stack
riverctl map normal Super+Shift Return zoom

# Super+H and Super+L to decrease/increase the main ratio of rivercarro(1)
# riverctl map normal Super H send-layout-cmd rivercarro "main-ratio -0.05"
# riverctl map normal Super L send-layout-cmd rivercarro "main-ratio +0.05"

# Super+Shift+H and Super+Shift+L to increment/decrement the main count of rivercarro(1)
# riverctl map normal Super I send-layout-cmd rivercarro "main-count +1"
# riverctl map normal Super+Shift I send-layout-cmd rivercarro "main-count -1"

# Switch layouts
# riverctl map normal Super T send-layout-cmd rivercarro "main-location left"
# riverctl map normal Super+Shift T send-layout-cmd rivercarro "main-location top"
# riverctl map normal Super+Control T send-layout-cmd rivercarro "main-location bottom"
# riverctl map normal Super M send-layout-cmd rivercarro "main-location monocle"

# Super+Alt+{H,J,K,L} to move views
riverctl map normal Super+Alt H move left 100
riverctl map normal Super+Alt J move down 100
riverctl map normal Super+Alt K move up 100
riverctl map normal Super+Alt L move right 100

# Super+Alt+Control+{H,J,K,L} to snap views to screen edges
riverctl map normal Super+Alt+Control H snap left
riverctl map normal Super+Alt+Control J snap down
riverctl map normal Super+Alt+Control K snap up
riverctl map normal Super+Alt+Control L snap right

# Super+Alt+Shift+{H,J,K,L} to resize views
riverctl map normal Super+Alt+Shift H resize horizontal -100
riverctl map normal Super+Alt+Shift J resize vertical 100
riverctl map normal Super+Alt+Shift K resize vertical -100
riverctl map normal Super+Alt+Shift L resize horizontal 100

# These keybinds work with the default river-ultitile configuration
# Increase/decrease the main size
riverctl map normal Super H send-layout-cmd river-ultitile "set integer main-size += 4"
riverctl map normal Super L send-layout-cmd river-ultitile "set integer main-size -= 4"

# Decrease/increase the main size if it is in the center (on widescreens)
riverctl map normal Super+Shift H send-layout-cmd river-ultitile "set integer main-size-if-only-centered-main += 4"
riverctl map normal Super+Shift L send-layout-cmd river-ultitile "set integer main-size-if-only-centered-main -= 4"

# Decrease/increase the main count
riverctl map normal Super I send-layout-cmd river-ultitile "set integer main-count += 1"
riverctl map normal Super+Shift I send-layout-cmd river-ultitile "set integer main-count -= 1"

# Change layout
riverctl map normal Super+Shift T send-layout-cmd river-ultitile "set string layout = vstack"
riverctl map normal Super+Control T send-layout-cmd river-ultitile "set string layout = hstack"
riverctl map normal Super M  send-layout-cmd river-ultitile "set string layout = monocle"
riverctl map normal Super T  send-layout-cmd river-ultitile "set string layout = main"

# Cycle through layouts on all tags/outputs
riverctl map normal Super E spawn "riverctl send-layout-cmd river-ultitile 'unset-all-local layout'; riverctl send-layout-cmd river-ultitile 'set global string layout @ main hstack vstack'"


# Super + Left Mouse Button to move views
riverctl map-pointer normal Super BTN_LEFT move-view

# Super + Right Mouse Button to resize views
riverctl map-pointer normal Super BTN_RIGHT resize-view

# Super + Middle Mouse Button to toggle float
riverctl map-pointer normal Super BTN_MIDDLE toggle-float

for i in $(seq 1 9)
do
    tags=$((1 << ($i - 1)))

    # Super+[1-9] to focus tag [0-8]
    riverctl map normal Super $i set-focused-tags $tags

    # Super+Shift+[1-9] to tag focused view with tag [0-8]
    riverctl map normal Super+Shift $i set-view-tags $tags

    # Super+Control+[1-9] to toggle focus of tag [0-8]
    riverctl map normal Super+Control $i toggle-focused-tags $tags

    # Super+Shift+Control+[1-9] to toggle tag [0-8] of focused view
    riverctl map normal Super+Shift+Control $i toggle-view-tags $tags
done

# Super+0 to focus all tags
# Super+Shift+0 to tag focused view with all tags
all_tags=$(((1 << 32) - 1))
riverctl map normal Super 0 set-focused-tags $all_tags
riverctl map normal Super+Shift 0 set-view-tags $all_tags

# Super+Space to toggle float
riverctl map normal Super+Shift Space toggle-float

# Super+F to toggle fullscreen
riverctl map normal Super F toggle-fullscreen

# Super+{Up,Right,Down,Left} to change layout orientation
# riverctl map normal Super Up    send-layout-cmd rivercarro "main-location top"
# riverctl map normal Super Right send-layout-cmd rivercarro "main-location right"
# riverctl map normal Super Down  send-layout-cmd rivercarro "main-location bottom"
# riverctl map normal Super Left  send-layout-cmd rivercarro "main-location left"


# Scratchpads
scratch_tags=$((special_tag | sticky_tag | terminal_tag | files_tag | dots_tag | monitor_tag | docs_tag | ticktick_tag | spotify_tag | project_tag))

all_but_scratch_tag=$((all_tags ^ scratch_tags))
riverctl spawn-tagmask ${all_but_scratch_tag}

scratchpad="$HOME/.config/river/scratchpads.sh"

riverctl map normal $mod+Shift A spawn "$scratchpad term"
riverctl map normal $mod+Shift S spawn "$scratchpad btop"
riverctl map normal $mod+Shift D spawn "$scratchpad files"
riverctl map normal $mod+Shift F spawn "$scratchpad nvim"
riverctl map normal $mod+Shift V spawn "$scratchpad project"


# Declare a passthrough mode. This mode has only a single mapping to return to
# normal mode. This makes it useful for testing a nested wayland compositor
riverctl declare-mode passthrough

# Super+F11 to enter passthrough mode
riverctl map normal Super F11 enter-mode passthrough

# Super+F11 to return to normal mode
riverctl map passthrough Super F11 enter-mode normal

# Various media key mapping examples for both normal and locked mode which do
# not have a modifier
for mode in normal locked
do
    # Eject the optical drive (well if you still have one that is)
    riverctl map $mode None XF86Eject spawn 'eject -T'

    # Control pulse audio volume with pamixer (https://github.com/cdemoulins/pamixer)
    riverctl map $mode None XF86AudioRaiseVolume  spawn 'volume up'
    riverctl map $mode None XF86AudioLowerVolume  spawn 'volume down'
    riverctl map $mode None XF86AudioMute         spawn 'volume mute'

    # Control MPRIS aware media players with playerctl (https://github.com/altdesktop/playerctl)
    riverctl map $mode None XF86AudioMedia spawn 'playerctl play-pause'
    riverctl map $mode None XF86AudioPlay  spawn 'playerctl play-pause'
    riverctl map $mode None XF86AudioPrev  spawn 'playerctl previous'
    riverctl map $mode None XF86AudioNext  spawn 'playerctl next'

    # Control screen backlight brightness with brightnessctl (https://github.com/Hummer12007/brightnessctl)
    riverctl map $mode None XF86MonBrightnessUp   spawn 'brightness up'
    riverctl map $mode None XF86MonBrightnessDown spawn 'brightness down'
done

# Make all views with an app-id that starts with "float" and title "foo" start floating.
riverctl rule-add -app-id 'float*' -title 'foo' float
riverctl rule-add -title 'nsxiv' float

# Make all views with app-id "bar" and any title use client-side decorations
riverctl rule-add -app-id "bar" csd

# Set the default layout generator to be rivercarro and start it.
# River will send the process group of the init executable SIGTERM on exit.
# riverctl default-layout rivercarro
# rivercarro -outer-gaps 2 -per-tag -main-location left
# rivercarro -view-padding 2 -outer-padding 2  -main-ratio 0.55 -main-count 1 &

# Set the default layout generator to be river-ultitile and start it.
# River will send the process group of the init executable SIGTERM on exit.
riverctl default-layout river-ultitile
river-ultitile &

